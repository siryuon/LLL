# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
Lifelong_learning/zero_adapter.py
Lifelong_learning/utils.py
Lifelong_learning/tmp_hook(not_use).py
Lifelong_learning/tmp_dossl.py
Lifelong_learning/tmp.py
Lifelong_learning/ssl_adapter_new_select_fix.py
Lifelong_learning/ssl_adapter_new_select.py
Lifelong_learning/ssl_adapter_new_reproduce.py
Lifelong_learning/ssl_adapter_new_mbpa.py
Lifelong_learning/ssl_adapter_new_loss_2.py
Lifelong_learning/ssl_adapter_new_loss.py
Lifelong_learning/ssl_adapter_new_fix.py
Lifelong_learning/ssl_adapter_new_ep10_select_fix.py
Lifelong_learning/ssl_adapter_new_ep10_select.py
Lifelong_learning/ssl_adapter_new_ep10_all.py
Lifelong_learning/ssl_adapter_new_downstream.py
Lifelong_learning/ssl_adapter_new.py
Lifelong_learning/ssl_adapter_4.py
Lifelong_learning/ssl_adapter_3.py
Lifelong_learning/ssl_adapter_2.py
Lifelong_learning/single_adapter.py
Lifelong_learning/run_for_stl.py
Lifelong_learning/run.py
Lifelong_learning/pretrain_adapter_phase2_v6.py
Lifelong_learning/pretrain_adapter_phase2_v5.py
Lifelong_learning/pretrain_adapter_phase2_v4_2.py
Lifelong_learning/pretrain_adapter_phase2_v4.py
Lifelong_learning/pretrain_adapter_phase2_v3.py
Lifelong_learning/pretrain_adapter_phase2_v2_stack_freeze.py
Lifelong_learning/pretrain_adapter_phase2_v2_parallel.py
Lifelong_learning/pretrain_adapter_phase2_v2.py
Lifelong_learning/pretrain_adapter_phase2.py
Lifelong_learning/pretrain_adapter_phase1x.py
Lifelong_learning/pretrain_adapter_phase1_v6.py
Lifelong_learning/pretrain_adapter_phase1_v5.py
Lifelong_learning/pretrain_adapter_phase1_v4_fix.py
Lifelong_learning/pretrain_adapter_phase1_v4_2.py
Lifelong_learning/pretrain_adapter_phase1_v4.py
Lifelong_learning/pretrain_adapter_phase1_v3.py
Lifelong_learning/pretrain_adapter_phase1_v2.py
Lifelong_learning/pretrain_adapter_phase1.py
Lifelong_learning/pretrain_adapter_notadap.py
Lifelong_learning/pretrain_adapter.py
